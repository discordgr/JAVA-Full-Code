import java.util.*;
public class main
{
	static ArrayList <Integer> availability = new ArrayList <Integer>(6);
	static ArrayList <Products> products = new ArrayList <Products>();
	static ArrayList <Order> orders = new ArrayList <Order>();
	static ArrayList <Sales> sales = new ArrayList <Sales>();
	static Scanner in = new Scanner ( System.in );
	
	
	public static void main(String args[]) 
	{
		Products i;	
		
		
		String answer,answer1,answer2,temp;
		boolean done = false;
		boolean flag,orderflag;
		int j;
		
		products.add(new TV(1,"TV1","1993","Samsung",59.99,"1920x1080",1,"1080p HDD","HDMI"));
		products.add(new TV(2,"TV2","1995","Toshiba",69.99,"1920x1080",2,"1080p HDD","VGA"));
		availability.add(2);
		products.add(new BRDVD(1,"DVD1","2009","Sony",109.99,"1920x1080",true,"DVD-RW"));
		products.add(new BRDVD(2,"BR1","2010","Sony",129.99,"1920x1080",false,"BD-R"));
		availability.add(2);
		products.add(new Camera(1,"CAMERA1","2015","Nikon",250.50,3,"15","x1000","x25000","8 inches"));
		products.add(new Camera(2,"CAMERA2","2016","Nikon",150.50,2,"15","x5000","x20000","4 inches"));
		availability.add(2);
		products.add(new Gaming(1,"CONSOLE1","2014","Sony",299.99,4,"Intel Core i5","VGA RADEON R9","Realtek HD Audio","500 GB"));
		products.add(new Gaming(2,"CONSOLE2","2010","Sony",149.99,2,"Intel Core i5","VGA RADEON R7","Realtek HD Audio","250 GB"));
		availability.add(2);
		products.add(new Friges(1,"FRIDGE1","2015","AEG",199.99,"500W",1,250,600));
		products.add(new Friges(2,"FRIDGE2","2016","AEG",239.99,"600W",3,250,800));
		availability.add(2);
		products.add(new Washingmachine(1,"MACHINE1","2007","AEG",419.99,"700W","300 Lb",300));
		products.add(new Washingmachine(2,"MACHINE2","2008","AEG",479.99,"700W","350 Lb",350));
		availability.add(2);
		
		int productsSaleCode = 0;                // Sales code
		int productsOrderCode = 0;				// Order code
		while ( ! done )	
		{
			
   	 		System.out.println("\n1. Available Devices");
   	 		System.out.println("2. All Orders");
   	 		System.out.println("3. All Sales");
   	 		System.out.println("0. Exit");
   	 		answer = in.nextLine();
   	 		if (answer.equals("1"))
			{
				System.out.println("Please choose one of the following categories: \n1.Image & Sound\n2.Gaming Consoles\n3.Household Appliances");
				answer1 = in.nextLine();
				if (answer1.equals("1"))  // Image & Sound 
				{
					System.out.println("Please define the type of device you want: \n1.TV\n2.Blue Ray & DVD\n3.Camera");
					answer2 = in.nextLine();
					if (answer2.equals("1"))         // TV 
					{
						i = method(TV.class);
						j = Number(i);
						if( j > 0 )
						{
							productsSaleCode++;
							createSales(productsSaleCode,i);
						}
						else if ( j == 0 )
						{
							productsOrderCode++;
							createOrder(productsOrderCode,i);						
						}
						else if ( j == -1 )
						{
							System.out.println("Redirecting you back to starting menu");
						}
						
					}                                        // TV          
					
					else if ( answer2.equals("2"))			// BR & DVD 
					{
						i = method(BRDVD.class);
						j = Number(i);
						if ( j > 0 )
						{
							productsSaleCode++;
							createSales(productsSaleCode,i);
						}
						else if ( j == 0 )
						{
							productsOrderCode++;
							createOrder(productsOrderCode,i);
						}
						else if ( j == -1 )
						{
							System.out.println("Redirecting you back to starting menu");
						}
					}										// BR & DVD	
					
					else 								   // Camera
					{
						i = method(Camera.class);
						j = Number(i);
						if( j > 0 )
						{
							productsSaleCode++;
							createSales(productsSaleCode,i);
						}
						else if ( j == 0 )
						{
							productsOrderCode++;
							createOrder(productsOrderCode,i);						
						}
						else if ( j == -1 )
						{
							System.out.println("Redirecting you back to starting menu");
						}
						
					}								// Camera				
				}                                  					// Image & Sound
				
				
				else if (answer1.equals("2"))					// Gaming
				{
					i = method(Gaming.class);
					j = Number(i);
						if( j > 0 )
						{
							productsSaleCode++;
							createSales(productsSaleCode,i);
						}
						else if ( j == 0 )
						{
							productsOrderCode++;
							createOrder(productsOrderCode,i);						
						}
						else if ( j == -1 )
						{
							System.out.println("Redirecting you back to starting menu");
						}
				}												// GAMING
				
				else															// House Hold appliances
				{
					System.out.println("Please define the type of device you want: \n1.Fridge\n2.Washing Machine");
					answer2 = in.nextLine();
					if (answer2.equals("1"))			// Fridge
					{
						i = method(Friges.class);
						j = Number(i);
						if( j > 0 )
						{
							productsSaleCode++;
							createSales(productsSaleCode,i);
						}
						else if ( j == 0 )
						{
							productsOrderCode++;
							createOrder(productsOrderCode,i);						
						}
						else if ( j == -1 )
						{
							System.out.println("Redirecting you back to starting menu");
						}
					}										
					
					else 							   // WASHING MACHINE
					{   
					   i = method(Washingmachine.class);
					   j = Number(i);
					   if( j > 0 )
						{
							productsSaleCode++;
							createSales(productsSaleCode,i);
						}
						else if ( j == 0 )
						{
							productsOrderCode++;
							createOrder(productsOrderCode,i);						
						}
						else if ( j == -1 )
						{
							System.out.println("Redirecting you back to starting menu");
						}
					   
					}														// Washing machine
				}         													 // House hold Appliances
				
			}
			else if ( answer.equals("2") ) 
			{
				System.out.println(orders+"\n");
				System.out.println("Do you wish to update the status of a specific order?\n1.Yes\n2.No");
				answer1 = in.nextLine();
				while ( !answer1.equals("1") && !answer1.equals("2") )
				{
					System.out.println("Wrong input!");
					System.out.println("Do you wish to update the status of a specific order?\n1.Yes\n2.No");
					answer1 = in.nextLine();
				}
				if ( answer1.equals("1") )
				{
					System.out.println("Which order do you wish to update?");
					answer1 = in.nextLine();
					for ( Order k : orders )
					{
						if ( answer1.equals(k.getOcode()) )
						{
							System.out.println(k);
							System.out.println("Has the order arrived at it's destination?\n1.Yes\n2.No");
							answer2 = in.nextLine();
							if ( answer2.equals("1") )
							{
								orderflag = true;
								k.setFlag(orderflag);
								productsSaleCode++;
								temp = "" + productsSaleCode;
								sales.add(new Sales(temp,k.getProductorder(),k.getFullname(),k.getPhone(),k.getArrivaldate(),k.getCost()));
							}
							else 
							{
								System.out.println("Redirecting you back to starting menu");
							}
						}
					}
				}
			}
			else if (answer.equals("3"))
			{
				System.out.println(sales);
			}
			else
			{
				done = true;
			}
		}
	}
    
	public static Products method(Class c)            //  Dinei sto xristi tin 
	{
		Products j = null;
		int x;
		String answer3;
		boolean flag;
		
		
		System.out.println("Please type the name of the device you're interested: ");                                      
		for( Products i : products )
		{
			if ( i.getClass() == c )
			{
				System.out.println(i.getName());
			}
		}
		answer3 = in.nextLine();
		flag = false;
		while ( flag == false )
		{
			for ( Products i : products )
			{
				if ( i.getName().equals(answer3) )
				{
					System.out.println(i);
					flag = true;
					j = i;
				}
			}
			if ( flag == false )
			{
				System.out.println("No such device");
				System.out.println("Please give me the name of the device you're interested: ");
				for( Products i : products )
				{
					if ( i.getClass()== c )
					{
						System.out.println(i.getName());
					}
				}
				answer3 = in.nextLine();
			}
		}
		return j;
	}	
	
	
	public static int Number(Products i)        // Enimerwnei ta diathesima proionta, Kathorizei an o xristis tha agorasei,tha paraggeilei i an tha epistrepsei sto arxiko menu
	{
		
		int available=0;
		int x = 0;
		String answer3;
			
		if ( i instanceof TV )
		{
			available = availability.get(0);
		}
		else if ( i instanceof BRDVD )
		{
			available = availability.get(1);
		}
		else if ( i instanceof Camera )
		{
			available = availability.get(2);
		}
		else if ( i instanceof Gaming )
		{
			available = availability.get(3);
		}
		else if ( i instanceof Friges )
		{
			available = availability.get(4);
		}
		else if ( i instanceof Washingmachine )
		{
			available = availability.get(5);
		}
		
		if ( available != 0 )
		{
			System.out.println("There are " + available + " available pieces for sale");
			System.out.println("Do you wish to buy the item? \n1.Yes\n2.No ");
			answer3 = in.nextLine();
			while ( !answer3.equals("1") && !answer3.equals("2") )
			{
				System.out.println("Wrong input!");
				System.out.println("Do you want to buy the item? \n1.Yes\n2.No ");
				answer3= in.nextLine();
			}
			
			if ( answer3.equals("1") )
			{
				if ( i instanceof TV )
				{
					availability.set(0,available-1);
				}
				else if ( i instanceof BRDVD )
				{
					availability.set(1,available-1);
				}
				else if ( i instanceof Camera )
				{
					availability.set(2,available-1);
				}
				else if ( i instanceof Gaming )
				{
					availability.set(3,available-1);
				}
				else if ( i instanceof Friges )
				{
					availability.set(4,available-1);
				}
				else if ( i instanceof Washingmachine )
				{
					availability.set(5,available-1);
				}
				x = available;
			}
			else if ( answer3.equals("2") )
			{
				x = -1;
			}
		}	
		else 
		{
			System.out.println("Not available items.");
			do
			{
				System.out.println("Do you want to order the item? \n1.Yes\n2.No");
				answer3=in.nextLine();
			}while ( !answer3.equals("1") && !answer3.equals("2") );
			
			if ( answer3.equals("1") )
			{
				x = 0;
			}
			else if ( answer3.equals("2") )
			{
				x = -1;
			}
		}
		return x;
	}
	
	
	public static void createSales(int code,Products i)
	{
		double total;
		//Scanner in = new Scanner(System.in);
		String scode,product,name,phone,date,totalcost;
		scode = "" + code;
		product = i.getName();
		System.out.println("Insert the name of the client: ");
		name = in.nextLine();
		System.out.println("Insert the phone of the client: ");
		phone = in.nextLine();
		System.out.println("Insert the date of the sale: ");
		date = in.nextLine();
		total = i.getPrice() - (i.getPrice())*(i.getDiscount());
		totalcost = "" + total;
		sales.add(new Sales(scode,product,name,phone,date,totalcost));
		System.out.println("The sale is done!");
		
	}
	
	public static void createOrder(int code,Products i)
	{
		double total;
		//Scanner in = new Scanner(System.in);
		String ocode,product,name,phone,orderdate,arrivaldate,answer,totalcost;
		boolean flag;
		ocode = "" + code;
		product = i.getName();
		System.out.println("Insert the name of the client: ");
		name = in.nextLine();
		System.out.println("Insert the phone of the client: ");
		phone = in.nextLine();
		System.out.println("Insert the Orderdate of the item: ");
		orderdate = in.nextLine();
		System.out.println("Insert the arrivaldate of the item");
		arrivaldate = in.nextLine();
		total = i.getPrice() - (i.getPrice()*i.getDiscount());
		totalcost = "" + total;
		/*System.out.println("Has the order arrived at it's destination?\n1.Yes\n2.No");
		answer = in.nextLine();
		while (!answer.equals("1") && !answer.equals("2"));
		{
			System.out.println("Wrong input!");
			System.out.println("Has the order arrived at it's destination?\n1.Yes\n2.No");
			answer = in.nextLine();
		}
		if ( answer.equals("1") )
		{
			flag = true;
		}
		else
		{
			flag = false;
		}*/
		flag = false;
		orders.add(new Order(ocode,product,name,phone,orderdate,arrivaldate,totalcost,flag));
		System.out.println("Your order is done!");
	}
}
